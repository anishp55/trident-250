[gcode_macro BEACON_VARS]
variable_beacon_contact_calibration_temp: 150                           # nozzle temperature for auto calibration
variable_adaptive_mesh: False                                           # REQUIRES zero_reference_position to be setup in [bed_mesh]
# Do not modify below
gcode:

[gcode_macro FAST_Z_TILT]
gcode:
    M117 Z_TILT
    {% if printer.configfile.settings.z_tilt %}
        {% if printer.z_tilt.applied == False %}
            Z_TILT_ADJUST RETRY_TOLERANCE=1
        {% endif %}
        Z_TILT_ADJUST horizontal_move_z=2
    {% endif %} 


[gcode_macro PRINT_START_MMU]
gcode:
    {% set BED_TEMP  = params.BED_TEMP|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
    {% set CHAMBER = params.CHAMBER|default(55)|int %}                                   ; Lets begin working with this chamber temp variable to ensure long enough heat soaking, until we add bed_top th
    {% set ADAPTIVE = params.ADAPTIVE|default('YES')|string %}
    {% set REFERENCED_TOOLS = params.REFERENCED_TOOLS|default("")|string %}
    {% set INITIAL_TOOL = params.INITIAL_TOOL|default(0)|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    {% if printer.configfile.settings['beacon'].home_z_hop is defined %}
        {% set z_hop = printer.configfile.settings['beacon'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['beacon'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['beacon'].home_z_hop_speed|float %}
    {% else %}
        {% set z_hop = printer.configfile.settings['safe_z_home'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['safe_z_home'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['safe_z_home'].home_z_hop_speed|float %}
    {% endif %}
    {% set beacon_contact_calibration_temp = printer["gcode_macro BEACON_VARS"].beacon_contact_calibration_temp|default(150)|int %}
    {% set adaptive_meshing = printer["gcode_macro BEACON_VARS"].adaptive_mesh|default(false) %}

    #{% if REFERENCED_TOOLS == "!referenced_tools!" %}                                    ; Using the gcode preprocessor, we announce the number of tools used in this print.
        #RESPOND MSG="Happy Hare gcode pre-processor is diabled"
        #{% set REFERENCED_TOOLS = INITIAL_TOOL %}
    #{% elif REFERENCED_TOOLS == "" %}
        #RESPOND MSG="Happy Hare single color print"
        #{% set REFERENCED_TOOLS = INITIAL_TOOL %}
    #{% endif %}

    # MMU_EJECT
    # MMU__HOME                                                                                  ; Home the MMU in order to check the gates
    # MMU_CHECK_GATE TOOLS={REFERENCED_TOOLS}

    SET_DISPLAY_TEXT MSG="Print start - Hotend: {beacon_contact_calibration_temp}c (1)"                           # Displays info
    RESPOND TYPE=command MSG="Print start - Hotend: {beacon_contact_calibration_temp}c (1)"
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps
    
    SET_DISPLAY_TEXT MSG="Print start - First Homing"                           # Displays info
    RESPOND TYPE=command MSG="Print start - First Homing"
    {% if printer.toolhead.homed_axes != "xy" %}
        G28 XY                                                                                     # Partial home (XY)
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X{x_wait} Y{y_wait} F{speed}                                                         # Goes to center of the bed
    {% endif %}
    G90                                                                                         # Absolute positioning


    M220 S100                                                                            ; Set printer speed to 100% just incase it adjusted last print
    BED_MESH_CLEAR                                                                              # Clears old saved bed mesh (if any)
    SET_GCODE_OFFSET Z=0                                                                        # Clears current offset
    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
    {% if params.BED_TEMP|int > 90 %}
        M106 S255                                                                               # Turns on the Part cooling fans

        {% if printer.configfile.settings["output_pin nevermore"] is defined %}
            SET_PIN PIN=nevermore VALUE=1                                                       # Turns on nevermore if setup
        {% endif %}

        SET_DISPLAY_TEXT MSG="Print start - Bed: {BED_TEMP}c"                                 # Displays info
        RESPOND TYPE=command MSG="Print start - Bed: {BED_TEMP}c"
        M190 S{BED_TEMP}                                                                      # Sets the target temp for the bed

        {% if printer.configfile.config["temperature_sensor chamber"] is defined %}
            SET_DISPLAY_TEXT MSG="Print start - Heatsoak: {CHAMBER}c"                    # Displays info
            RESPOND TYPE=command MSG="Print start - Hotsoak: {CHAMBER}c"
            TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER}       # Waits for chamber to reach desired temp
        {% endif %}

	# If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
    {% else %}
        SET_DISPLAY_TEXT MSG="Print start - Turning on Nevermore"
        RESPOND TYPE=command MSG="Print start - Turning on Nevermore"
        SET_FAN_SPEED FAN=Nevermore SPEED=0.5                                                 # Turn on Nevermore at 50%
        SET_DISPLAY_TEXT MSG="Print start - Bed: {BED_TEMP}c"                                 # Displays info
        RESPOND TYPE=command MSG="Print start - Bed: {BED_TEMP}c"
        M190 S{BED_TEMP}                                                                      # Sets the target temp for the bed
        SET_DISPLAY_TEXT MSG="Print start - Soak for 5min"                                    # Displays info
        RESPOND TYPE=command MSG="Print start - Soak for 5min"
        G4 P300000                                                                            # Waits 5 min for the bedtemp to stabilize
    {% endif %}

    # Heat hotend to 150c. This helps with getting a correct Z-home.
    SET_DISPLAY_TEXT MSG="Print start - Hotend: {beacon_contact_calibration_temp}c (2)"         # Displays info
    RESPOND TYPE=command MSG="Print start - Hotend: {beacon_contact_calibration_temp}c (2)"
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps

    {% if printer.configfile.config["gcode_macro WIPE_NOZZLE"] is defined %}
        WIPE_NOZZLE                                                                             # Wipes the nozzle via macro if setup
    {% endif %}
    
    SET_DISPLAY_TEXT MSG="Print start - Hotend: {beacon_contact_calibration_temp}c (3)"         # Displays info
    RESPOND TYPE=command MSG="Print start - Hotend: {beacon_contact_calibration_temp}c (3)"
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps
    
    # If you don't change build plates then you may remove this by commenting it out
    G28 Z METHOD=CONTACT CALIBRATE=1                                                            # Calibrate z offset and beacon model hot

    {% if printer.z_tilt is defined and not printer.z_tilt.applied %}
        SET_DISPLAY_TEXT MSG="Print start - Z-tilt adjust"                                      # Displays info
        RESPOND TYPE=command MSG="Print start - Z-tilt adjust"
        {% if printer.configfile.config["gcode_macro FAST_Z_TILT"] is defined %}
            {% if printer.configfile.settings['beacon'].default_probe_method != contact %}
                FAST_Z_TILT                                                                     # Levels the buildplate via Z_TILT but FASTER
            {% endif %}
        {% else %}
            Z_TILT_ADJUST                                                                       # Levels the buildplate via Z_TILT
        {% endif %}
        G28 Z                                                                                   # Homes Z again after z_tilt_adjust
    {% endif %}

    {% if printer.quad_gantry_level is defined and not printer.quad_gantry_level.applied %}
        SET_DISPLAY_TEXT MSG="Print start - QGL"                                                # Displays info
        RESPOND TYPE=command MSG="Print start - QGL"
        {% if printer.configfile.config["gcode_macro FAST_QGL"] is defined %}
            {% if printer.configfile.settings['beacon'].default_probe_method != contact %}
                FAST_QGL                                                                        # Levels the buildplate via QGL but FASTER
            {% endif %}
        {% else %}
            quad_gantry_level                                                                   # Levels the buildplate via QGL
        {% endif %}
        G28 Z                                                                                   # Homes Z again after QGL
    {% endif %}

    ##  comment if you want to load a previous mesh
    SET_DISPLAY_TEXT MSG="Print start - Bed Mesh"                                               # Displays info
    RESPOND TYPE=command MSG="Print start - Bed Mesh"

    # {% if adaptive_meshing %}
    bed_mesh_calibrate ADAPTIVE=1 RUNS=2                                                        # Runs an adaptive bed mesh
    # {% else %}
    #     bed_mesh_calibrate                                                                    # Runs a bed mesh 
    # {% endif %}

    {% if printer.configfile.config["gcode_macro WIPE_NOZZLE"] is defined %}
        WIPE_NOZZLE                                                                             # Wipes the nozzle via macro if setup
    {% endif %}

    SET_DISPLAY_TEXT MSG="Print start - Hotend: {beacon_contact_calibration_temp}c (4)"         # Displays info
    RESPOND TYPE=command MSG="Print start - Hotend: {beacon_contact_calibration_temp}c (4)"
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps
    
    G28 Z METHOD=CONTACT CALIBRATE=0                                                            # Calibrate z offset only after tilt/mesh


    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Print start - Hotend: {EXTRUDER_TEMP}c"                               # Displays info
    RESPOND TYPE=command MSG="Print start - Hotend: {EXTRUDER_TEMP}c"
 
    {% if printer.configfile.config["gcode_macro SMART_PARK"] is defined %}
        SMART_PARK                                                                              # Parks using KAMP
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X{x_wait} Y{y_wait} F{speed}                                                         # Goes to center of the bed
    {% endif %}

	M107                                                                                        # Turns off partcooling fan
    M109 S{EXTRUDER_TEMP}                                                                       # Heats the nozzle to printing temp
    
    {% if printer.configfile.config["gcode_macro _BEACON_SET_NOZZLE_TEMP_OFFSET"] is defined %}
        SET_DISPLAY_TEXT MSG="Print start - Applying Beacon offset"                             # Displays info
        RESPOND TYPE=command MSG="Print start - Applying Beacon offset"
        _BEACON_SET_NOZZLE_TEMP_OFFSET                                                          # Adds toolhead expansion offset (REQUIRES ADDITIONAL MACROS NOT BY DEFAULT Found at:https://github.com/YanceyA/Beacon_Thermal_Expansion_Compensation )
    {% endif %}


    # # Gets ready to print by doing a purge line
    # SET_DISPLAY_TEXT MSG="Printer goes brr"                                                     # Displays info
    # {% if printer.configfile.config["gcode_macro PURGE_NOZZLE"] is defined %}
    #     PURGE_NOZZLE                                                                            # Purges the nozzle via macro if setup
    # {% elif printer.configfile.config["gcode_macro LINE_PURGE"] is defined %}
    #     LINE_PURGE                                                                              # Purges the nozzle using KAMP adaptive purging if setup
    # {% elif printer.configfile.config["gcode_macro VORON_PURGE"] is defined %}
    #     VORON_PURGE                                                                             # Purges the nozzle using KAMP adaptive purging if setup
    # {% endif %}
   
    G90                                                                                         # Absolute positioning                             # Absolute position